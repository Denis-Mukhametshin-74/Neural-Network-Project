"""
@file train.py
@brief –û—Å–Ω–æ–≤–Ω–æ–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –æ–±—É—á–µ–Ω–∏—è –∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –Ω–µ–π—Ä–æ—Å–µ—Ç–∏
@author Developer1 & Developer2
@version 2.0
"""

import numpy as np
import sys
import os
from src.neural_network import NeuralNetwork
from src.data_loader import DataLoader
from src.visualizer import NeuralNetworkVisualizer


def main():
    """
    @brief –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –æ–±—É—á–µ–Ω–∏—è —Å –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏–µ–π
    """
    print("=== Neural Network Project ===")
    print("üé® –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —Å –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏–µ–π US-1")

    # –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫—É –¥–ª—è –≥—Ä–∞—Ñ–∏–∫–æ–≤
    os.makedirs('docs/images', exist_ok=True)

    try:
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –≤–∏–∑—É–∞–ª–∏–∑–∞—Ç–æ—Ä
        visualizer = NeuralNetworkVisualizer()

        # –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö
        print("\nüì• –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö MNIST...")
        loader = DataLoader()
        X_train, X_test, y_train, y_test = loader.load_mnist_data()

        # –í–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏–º–µ—Ä–æ–≤ –¥–∞–Ω–Ω—ã—Ö
        print("üìä –í–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏–º–µ—Ä–æ–≤ –¥–∞–Ω–Ω—ã—Ö...")
        visualizer.plot_mnist_samples(
            X_train, y_train,
            num_samples=10,
            save_path='docs/images/mnist_samples.png'
        )

        # –í–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã —Å–µ—Ç–∏
        print("üèóÔ∏è –í–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã –Ω–µ–π—Ä–æ—Å–µ—Ç–∏...")
        visualizer.plot_network_architecture(
            input_size=784, hidden_size=128, output_size=10,
            save_path='docs/images/network_architecture.png'
        )

        # –°–æ–∑–¥–∞–Ω–∏–µ –Ω–µ–π—Ä–æ—Å–µ—Ç–∏
        input_size = X_train.shape[1]  # 784 features
        hidden_size = 128
        output_size = y_train.shape[1]  # 10 classes

        print(f"\nüß† –°–æ–∑–¥–∞–Ω–∏–µ –Ω–µ–π—Ä–æ—Å–µ—Ç–∏: {input_size}-{hidden_size}-{output_size}")
        nn = NeuralNetwork(input_size, hidden_size, output_size)

        # –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ forward propagation
        print("\nüîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ forward propagation...")
        sample_data = X_train[:5]  # –ü–µ—Ä–≤—ã–µ 5 –ø—Ä–∏–º–µ—Ä–æ–≤
        predictions = nn.forward(sample_data)

        print(f"üìê –í—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ: {sample_data.shape}")
        print(f"üìä –í—ã—Ö–æ–¥–Ω—ã–µ –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç–∏: {predictions.shape}")
        print(f"üßÆ –°—É–º–º–∞ –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç–µ–π –¥–ª—è –ø–µ—Ä–≤–æ–≥–æ –ø—Ä–∏–º–µ—Ä–∞: {predictions[0].sum():.6f}")

        # –í–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏–º–µ—Ä–æ–≤ –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–π
        print("\nüéØ –í–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏–º–µ—Ä–æ–≤ –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–π...")
        visualizer.plot_prediction_example(
            nn, X_test, y_test,
            num_examples=3,
            save_path='docs/images/prediction_examples.png'
        )

        # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–æ—á–Ω–æ—Å—Ç–∏ –Ω–∞ —Å–ª—É—á–∞–π–Ω—ã—Ö –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏—è—Ö
        accuracy = nn.compute_accuracy(X_test, y_test)
        print(f"\nüìà –¢–æ—á–Ω–æ—Å—Ç—å –Ω–∞ —Ç–µ—Å—Ç–æ–≤–æ–π –≤—ã–±–æ—Ä–∫–µ: {accuracy:.4f}")

        # –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —Ä–∞–±–æ—Ç—ã
        print(f"\nüîç –ü—Ä–∏–º–µ—Ä –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏—è:")
        print(f"üìä –í–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç–∏ –ø–æ –∫–ª–∞—Å—Å–∞–º: {[f'{p:.3f}' for p in predictions[0]]}")
        print(f"üéØ –ü—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–Ω—ã–π –∫–ª–∞—Å—Å: {np.argmax(predictions[0])}")

        print("\n" + "=" * 50)
        print("‚úÖ US-1 —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")
        print("üé® –î–æ–±–∞–≤–ª–µ–Ω–∞ –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö –∏ –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã")
        print("üìÅ –ì—Ä–∞—Ñ–∏–∫–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ docs/images/")
        print("üß† –ù–µ–π—Ä–æ—Å–µ—Ç—å –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞, forward propagation —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
        print("=" * 50)

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        print("\nüîß –í–æ–∑–º–æ–∂–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è:")
        print("1. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ pandas: pip install pandas")
        print("2. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç—É")
        print("3. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω matplotlib: pip install matplotlib")
        sys.exit(1)


if __name__ == "__main__":
    main()